<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>edu.kit.kastel.informalin</groupId>
  <artifactId>framework</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>

  <name>InFormALin Framework</name>
  <url>https://github.com/InFormALin/Framework</url>

  <modules>
    <module>configuration</module>
    <module>common</module>
  </modules>

  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/InFormALin/Framework/issues</url>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>github</id>
      <name>GitHub InFormALin Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/InFormALin/Framework</url>
    </repository>
    <snapshotRepository>
      <id>github</id>
      <name>GitHub InFormALin Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/InFormALin/Framework</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <revision>0.2-SNAPSHOT</revision>
    <java.version>17</java.version>

    <sonar.projectKey>InFormALin_Framework</sonar.projectKey>
    <sonar.organization>informalin</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.moduleKey>${project.groupId}:${project.artifactId}</sonar.moduleKey>

    <slf4j.version>1.7.36</slf4j.version>
    <spotless.version>2.22.1</spotless.version>
    <junit.version>5.8.2</junit.version>
    <eclipse-collections.version>11.0.0</eclipse-collections.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Eclipse collections -->
      <dependency>
        <groupId>org.eclipse.collections</groupId>
        <artifactId>eclipse-collections-api</artifactId>
        <version>${eclipse-collections.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.collections</groupId>
        <artifactId>eclipse-collections</artifactId>
        <version>${eclipse-collections.version}</version>
      </dependency>

      <!-- Commons -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.12.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>1.9</version>
      </dependency>

      <!-- Logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <!-- Testing -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.vintage</groupId>
        <artifactId>junit-vintage-engine</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>4.5.0</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>github</id>
      <name>GitHub InFormALin Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/InFormALin/Framework</url>
    </repository>
  </repositories>
  <build>
    <plugins>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.version}</version>
        <configuration>
          <formats>
            <format>
              <includes>
                <include>*.md</include>
                <include>.gitignore</include>
              </includes>
              <trimTrailingWhitespace></trimTrailingWhitespace>
              <endWithNewline></endWithNewline>
              <indent>
                <tabs>true</tabs>
                <spacesPerTab>4</spacesPerTab>
              </indent>
            </format>
          </formats>
          <!-- define a language-specific format -->
          <java>
            <eclipse>
              <file>${maven.multiModuleProjectDirectory}/formatter.xml</file>
            </eclipse>
            <removeUnusedImports></removeUnusedImports>
            <licenseHeader>
              <file>${maven.multiModuleProjectDirectory}/license-header</file>
            </licenseHeader>
          </java>
          <pom>
            <sortPom>
              <encoding>UTF-8</encoding>
              <keepBlankLines>true</keepBlankLines>
              <indentBlankLines>false</indentBlankLines>
              <nrOfIndentSpace>2</nrOfIndentSpace>
            </sortPom>
          </pom>
          <ratchetFrom>origin/main</ratchetFrom>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>1.2.7</version>
        <configuration>
          <updatePomFile>true</updatePomFile>
          <flattenMode>resolveCiFriendliesOnly</flattenMode>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <goals>
              <goal>flatten</goal>
            </goals>
            <phase>process-resources</phase>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <goals>
              <goal>clean</goal>
            </goals>
            <phase>clean</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
